{"ast":null,"code":"var _jsxFileName = \"D:\\\\codes\\\\React Course\\\\reacttut\\\\react_router\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [ingredientList, setIngredientList] = useState([]);\n  const API_KEY = \"b46c142bd0ae81837c2625c4be4314ad\";\n  const APP_ID = 'd0f9f036';\n  useEffect(() => {\n    let url = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${API_KEY}`;\n    fetch(url).then(response => response.json()).then(res => {\n      console.log(res.hits);\n      setIngredientList(res.hits);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: ingredientList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.recipe.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.recipe.image,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 14\n            }, this), item.recipe.ingredientList.map(step => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 25\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mIeJMFNOpL3b6arr1pZ+UXLgUfk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","count","setCount","ingredientList","setIngredientList","API_KEY","APP_ID","url","fetch","then","response","json","res","console","log","hits","catch","err","className","children","map","item","recipe","label","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","step","_c","$RefreshReg$"],"sources":["D:/codes/React Course/reacttut/react_router/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst App = () => {\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [ingredientList, setIngredientList] = useState([])\r\n  const API_KEY = \"b46c142bd0ae81837c2625c4be4314ad\"\r\n  const APP_ID = 'd0f9f036'\r\n\r\nuseEffect(() => {\r\n let url = `https://api.edamam.com/search?q=chicken&app_id=${APP_ID}&app_key=${API_KEY}`\r\n fetch(url).then(response => response.json())\r\n .then((res) =>\r\n  {console.log(res.hits)\r\n  setIngredientList(res.hits) })\r\n .catch((err) => {\r\n  console.log(err);\r\n })\r\n\r\n\r\n},[])\r\n\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n    <div className='header'>\r\n\r\n      <div className='box'>\r\n        {ingredientList.map(item => {\r\n          return(\r\n             <div className='card'>\r\n             <span>{item.recipe.label}</span>\r\n             <img src={item.recipe.image} alt=''/>\r\n             {\r\n              item.recipe.ingredientList.map((step) => {\r\n                 return <p>{step}</p>\r\n              })\r\n             }\r\n             </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n\r\n     \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMS,OAAO,GAAG,kCAAkC;EAClD,MAAMC,MAAM,GAAG,UAAU;EAE3BX,SAAS,CAAC,MAAM;IACf,IAAIY,GAAG,GAAI,kDAAiDD,MAAO,YAAWD,OAAQ,EAAC;IACvFG,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3CF,IAAI,CAAEG,GAAG,IACT;MAACC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;MACtBX,iBAAiB,CAACQ,GAAG,CAACG,IAAI,CAAC;IAAC,CAAC,CAAC,CAC9BC,KAAK,CAAEC,GAAG,IAAK;MACfJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;IACjB,CAAC,CAAC;EAGH,CAAC,EAAC,EAAE,CAAC;EAIH,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1BrB,OAAA;MAAKoB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eAErBrB,OAAA;QAAKoB,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjBhB,cAAc,CAACiB,GAAG,CAACC,IAAI,IAAI;UAC1B,oBACGvB,OAAA;YAAKoB,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACrBrB,OAAA;cAAAqB,QAAA,EAAOE,IAAI,CAACC,MAAM,CAACC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChC7B,OAAA;cAAK8B,GAAG,EAAEP,IAAI,CAACC,MAAM,CAACO,KAAM;cAACC,GAAG,EAAC;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,EAEpCN,IAAI,CAACC,MAAM,CAACnB,cAAc,CAACiB,GAAG,CAAEW,IAAI,IAAK;cACtC,oBAAOjC,OAAA;gBAAAqB,QAAA,EAAIY;cAAI;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YACvB,CAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEE,CAAC;QAEX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAID,CAAC;AAEV,CAAC;AAAA3B,EAAA,CA/CKD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAiDT,eAAeA,GAAG;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}